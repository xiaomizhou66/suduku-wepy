<style lang="less">
.container {
  position: relative;
  height: 100%;
  .title {
    height: 10%;
    font-size: 30px;
    color: rgb(206, 204, 111);
    text-align: center;
    text-shadow: 2px 3px 2px rgb(190, 133, 133);
    margin: 5x;
  }
  .difficultys {
    width: 100%;
    font-size: 1rem; // 无效？
    font-size: 28rpx;
    display: flex;
    align-items: center;
    justify-content: space-between;
    text-align: center;
    .difficulty {
      width: 20%;
      height: 30px;
      line-height: 30px;
      margin: 5px;
      border-radius: 10px;
      background: #dbddbc;
    }
  }
  .rankings {
    margin: 5px;
    background: #dbddbc;
    margin: 5x;
    border-radius: 10px;
    min-height: 72%;
    .title {
      display: flex;
      justify-content: space-around;
      font-size: 16px;
      margin: 5px;
      .title-list {
        padding: 5px 0;
        flex: 1;
        color: rgb(48, 48, 46);
        border: 3px solid #fff;
        border-radius: 10px;
        background: #e7ec9b;
        text-shadow: 2px 3px 2px rgb(190, 133, 133);
      }
      .ranking{

      }
    }
    .userinfo {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .userinfo-avatar {
      width: 80rpx;
      height: 80rpx;
      border-radius: 50%;
    }
    .userinfo-nickname {
      color: #aaa;
    }
  }
  .ranking-type {
    width: 100%;
    position: absolute;
    bottom: 0;
    display: flex;
    justify-content: space-around;
    font-size: 16px;
    text-align: center;
    .type-list {
      width: 33%;
      padding: 5px 0;
      flex: 1;
      color: rgb(48, 48, 46);
      border: 3px dashed #fff;
      background: #e7ec9b;
    }
  }
}
</style>
<template lang='wxml' minapp='wepy'>
  <view class="container">
    <view class="title">
      通关排行榜/单局用时排行榜
      <!-- <i class="iconfont" style="font-size:30px">&#xe686;</i> -->
    </view>
    <view class='difficultys'>
      <view @tap='tapDifficulty({{index}})' class='difficulty' wx:for-items="{{difficultys}}" wx:for-index="index" wx:for-item="difficulty" wx:key="index">
        <text>{{difficulty}}</text>
      </view>
    </view>

    <view class='rankings'>
      <view class="title">
        <view class="title-list">排名</view>
        <view class="title-list">昵称</view>
        <view class="title-list">通关数</view>
      </view>
      <block wx:for-items="{{levels}}" wx:for-index="index" wx:for-item="level" wx:key="index">
        <view class='ranking'>
          <image class='userinfo-avatar' src="{{avatarUrl}}"/>
          <view class="userinfo-nickname">{{nickname}}</view>
          <view class="level-pass">{{levelPass}}</view>
        </view>
      </block>
    </view>

    <view class="ranking-type">
      <view class="type-list">好友排行</view>
      <view class="type-list">省市排行</view>
      <view class="type-list">国家排行</view>
    </view>
      
  </view>
</template>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import Panel from '@/components/panel' // alias example
import Counter from 'counter' // alias example
import List from '../components/list' // aliasFields example
import moduleA from 'module-a' // aliasFields ignore module example
import Group from '../components/group'
import Toast from 'wepy-com-toast'
import testMixin from '../mixins/test'

console.log('moduleA ignored: ', moduleA) // => moduleA ignored: {}

@connect({
  num(state) {
    return state.counter.num
  },
  asyncNum(state) {
    return state.counter.asyncNum
  },
  sumNum(state) {
    return state.counter.num + state.counter.asyncNum
  }
})
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: ' '
  };
  components = {
    panel: Panel,
    counter1: Counter,
    counter2: Counter,
    list: List,
    group: Group,
    toast: Toast
  };

  mixins = [testMixin];

  data = {
    difficultys: ['传统数独', 'X数独', '超级数独', '拼图数独', '武士数独']
  };

  computed = {
    now() {
      return +new Date()
    }
  };

  methods = {
    // 传统数独 ？ x 数独？.....
    tapDifficulty(index) {}
  };

  events = {
    'index-emit': (...args) => {
      let $event = args[args.length - 1]
      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      )
    }
  };
  onLoad() {
    let self = this
    this.$parent.getUserInfo(function(userInfo) {
      if (userInfo) {
        self.userInfo = userInfo
      }
      self.normalTitle = '标题已被修改'
      self.setTimeoutTitle = '标题三秒后会被修改'
      setTimeout(() => {
        self.setTimeoutTitle = '到三秒了'
        self.$apply()
      }, 3000)
      self.$apply()
    })
  }
}
</script>
