<style lang="less">
.container {
  height: 100%;
  .title {
    height: 10%;
    font-size: 30px;
    color: rgb(206, 204, 111);
    text-align: center;
    text-shadow: 2px 3px 2px rgb(190, 133, 133);
    margin: 5x;
  }
  .question-anser {
    height: 85%;
    font-size: 25px;
    color: rgb(20, 109, 68);
    padding: 0 10px;
    overflow: scroll;
    .question {
      font-size: 20px;
      color: rgb(7, 88, 71);
    }
    .anser {
      .anser-title {
        color: rgb(127, 158, 70);
        font-size: 16px;
      }
      .anser-text {
        margin: 5px;
        padding: 5px 10px;
        font-family: '微软雅黑';
        font-size: 12px;
        color: rgb(20, 20, 20);
        background: #dbddbc;
        border-radius: 5px;
        border: 2px outset #fff;
      }
      .image {
        width: 100%;
        height: ~'100vw';
      }
    }
  }
}
</style>
<template lang="wxml" minapp='wepy'>
  <view class="container">
    <button @tap='test'>test</button>
    <view class='title'>玩转数独</view>
    <view class='question-anser'>
     <!--  数独游戏如何玩 -->
      <view class="question">1.传统数独</view>
      <view class="anser">
        <view class="anser-title">唯一解法</view>
        <view class="anser-text">如果某行已填数字的单元格达到8个,那么该行剩余单元格能填的数字就只剩下那个还没出现过的数字；同理， 如果某列已填数字的单元格达到8个,那么该列剩余单元格能填的数字就只剩下那个还没出现过的数字；如果某九宫格已填数字的单元格达到8个,那么该九宫格剩余单元格能填的数字就只剩下那个还没出现过的数字。如图，观察D7-F9这个九宫格，我们发现除了E7单元格以外其余的八个单元格已经填入了1、2、3、4、6、7、8、9，还有5没有填写，所以5就应该填入E7单元格。这是九宫格唯一解法。    
        </view>
        <image src="" />
        <view class="anser-title">基础摒弃法</view>
        <view class="anser-text">如果某行中已经有了某一数字，则该行中的其他位置不可能再出现这一数字；如果某列中已经有了某一数字，则该列中的其他位置不可能再出现这一数字; 如果某区块中已经有了某一数字，则该区块中的其他位置不可能再出现这一数字。基础摒除法可以分为行摒除、列摒除和九宫格摒除。如图，观察第7列。由于B2单元格有数字1，所以行B其他所有单元格都不能填入1；由于F4单元格有数字1，所以行F其他所有单元格都不能填入1。这样第7列只有A7单元格能够填入数字1。所以A7单元格的答案是1。  
        </view>
        <image src="" />
      </view>
      <view class="question">2.X 数独</view>
      <view class="anser">
        <view class="anser-title">唯一解法</view>
        <view class="anser-text">如果某行已填数字的单元格达到8个,那么该行剩余单元格能填的数字就只剩下那个还没出现过的数字；同理， 如果某列已填数字的单元格达到8个,那么该列剩余单元格能填的数字就只剩下那个还没出现过的数字；如果某九宫格已填数字的单元格达到8个,那么该九宫格剩余单元格能填的数字就只剩下那个还没出现过的数字。如图，观察D7-F9这个九宫格，我们发现除了E7单元格以外其余的八个单元格已经填入了1、2、3、4、6、7、8、9，还有5没有填写，所以5就应该填入E7单元格。这是九宫格唯一解法。    
        </view>
        <image src="" />
        <view class="anser-title">基础摒弃法</view>
        <view class="anser-text">如果某行中已经有了某一数字，则该行中的其他位置不可能再出现这一数字；如果某列中已经有了某一数字，则该列中的其他位置不可能再出现这一数字; 如果某区块中已经有了某一数字，则该区块中的其他位置不可能再出现这一数字。基础摒除法可以分为行摒除、列摒除和九宫格摒除。如图，观察第7列。由于B2单元格有数字1，所以行B其他所有单元格都不能填入1；由于F4单元格有数字1，所以行F其他所有单元格都不能填入1。这样第7列只有A7单元格能够填入数字1。所以A7单元格的答案是1。  
        </view>
        <image src="" />
      </view>
      <view class="question">3.超级数独</view>
      <view class="anser">
        <view class="anser-title">唯一解法</view>
        <view class="anser-text">如果某行已填数字的单元格达到8个,那么该行剩余单元格能填的数字就只剩下那个还没出现过的数字；同理， 如果某列已填数字的单元格达到8个,那么该列剩余单元格能填的数字就只剩下那个还没出现过的数字；如果某九宫格已填数字的单元格达到8个,那么该九宫格剩余单元格能填的数字就只剩下那个还没出现过的数字。如图，观察D7-F9这个九宫格，我们发现除了E7单元格以外其余的八个单元格已经填入了1、2、3、4、6、7、8、9，还有5没有填写，所以5就应该填入E7单元格。这是九宫格唯一解法。    
        </view>
        <image src="" />
        <view class="anser-title">基础摒弃法</view>
        <view class="anser-text">如果某行中已经有了某一数字，则该行中的其他位置不可能再出现这一数字；如果某列中已经有了某一数字，则该列中的其他位置不可能再出现这一数字; 如果某区块中已经有了某一数字，则该区块中的其他位置不可能再出现这一数字。基础摒除法可以分为行摒除、列摒除和九宫格摒除。如图，观察第7列。由于B2单元格有数字1，所以行B其他所有单元格都不能填入1；由于F4单元格有数字1，所以行F其他所有单元格都不能填入1。这样第7列只有A7单元格能够填入数字1。所以A7单元格的答案是1。  
        </view>
        <image src="" />
      </view>
      <view class="question">4.拼图数独</view>
      <view class="anser">
        <view class="anser-title">唯一解法</view>
        <view class="anser-text">如果某行已填数字的单元格达到8个,那么该行剩余单元格能填的数字就只剩下那个还没出现过的数字；同理， 如果某列已填数字的单元格达到8个,那么该列剩余单元格能填的数字就只剩下那个还没出现过的数字；如果某九宫格已填数字的单元格达到8个,那么该九宫格剩余单元格能填的数字就只剩下那个还没出现过的数字。如图，观察D7-F9这个九宫格，我们发现除了E7单元格以外其余的八个单元格已经填入了1、2、3、4、6、7、8、9，还有5没有填写，所以5就应该填入E7单元格。这是九宫格唯一解法。    
        </view>
        <image src="" />
        <view class="anser-title">基础摒弃法</view>
        <view class="anser-text">如果某行中已经有了某一数字，则该行中的其他位置不可能再出现这一数字；如果某列中已经有了某一数字，则该列中的其他位置不可能再出现这一数字; 如果某区块中已经有了某一数字，则该区块中的其他位置不可能再出现这一数字。基础摒除法可以分为行摒除、列摒除和九宫格摒除。如图，观察第7列。由于B2单元格有数字1，所以行B其他所有单元格都不能填入1；由于F4单元格有数字1，所以行F其他所有单元格都不能填入1。这样第7列只有A7单元格能够填入数字1。所以A7单元格的答案是1。  
        </view>
        <image src="" />
      </view>
      <view class="question">5.武士数独</view>
      <view class="anser">
        <view class="anser-title">唯一解法</view>
        <view class="anser-text">如果某行已填数字的单元格达到8个,那么该行剩余单元格能填的数字就只剩下那个还没出现过的数字；同理， 如果某列已填数字的单元格达到8个,那么该列剩余单元格能填的数字就只剩下那个还没出现过的数字；如果某九宫格已填数字的单元格达到8个,那么该九宫格剩余单元格能填的数字就只剩下那个还没出现过的数字。如图，观察D7-F9这个九宫格，我们发现除了E7单元格以外其余的八个单元格已经填入了1、2、3、4、6、7、8、9，还有5没有填写，所以5就应该填入E7单元格。这是九宫格唯一解法。    
        </view>
        <image src="" />
        <view class="anser-title">基础摒弃法</view>
        <view class="anser-text">如果某行中已经有了某一数字，则该行中的其他位置不可能再出现这一数字；如果某列中已经有了某一数字，则该列中的其他位置不可能再出现这一数字; 如果某区块中已经有了某一数字，则该区块中的其他位置不可能再出现这一数字。基础摒除法可以分为行摒除、列摒除和九宫格摒除。如图，观察第7列。由于B2单元格有数字1，所以行B其他所有单元格都不能填入1；由于F4单元格有数字1，所以行F其他所有单元格都不能填入1。这样第7列只有A7单元格能够填入数字1。所以A7单元格的答案是1。  
        </view>
        <image src="" />
      </view>
    </view>

     <!-- <view class='question-anser'>
      <view class="question">1.传统数独</view>
      <view class="anser">
        <view class="anser-title">唯一解法</view>
        <view class="anser-text">如果某行已填数字的单元格达到8个,那么该行剩余单元格能填的数字就只剩下那个还没出现过的数字；同理， 如果某列已填数字的单元格达到8个,那么该列剩余单元格能填的数字就只剩下那个还没出现过的数字；如果某九宫格已填数字的单元格达到8个,那么该九宫格剩余单元格能填的数字就只剩下那个还没出现过的数字。如图，观察D7-F9这个九宫格，我们发现除了E7单元格以外其余的八个单元格已经填入了1、2、3、4、6、7、8、9，还有5没有填写，所以5就应该填入E7单元格。这是九宫格唯一解法。    
        </view>
        <image src="" />
        <view class="anser-title">基础摒弃法</view>
        <view class="anser-text">如果某行中已经有了某一数字，则该行中的其他位置不可能再出现这一数字；如果某列中已经有了某一数字，则该列中的其他位置不可能再出现这一数字; 如果某区块中已经有了某一数字，则该区块中的其他位置不可能再出现这一数字。基础摒除法可以分为行摒除、列摒除和九宫格摒除。如图，观察第7列。由于B2单元格有数字1，所以行B其他所有单元格都不能填入1；由于F4单元格有数字1，所以行F其他所有单元格都不能填入1。这样第7列只有A7单元格能够填入数字1。所以A7单元格的答案是1。  
        </view>
        <image src="" />
      </view> -->
      
     
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import Panel from '@/components/panel'; // alias example
import Counter from 'counter'; // alias example
import List from '../components/list'; // aliasFields example
import moduleA from 'module-a'; // aliasFields ignore module example
import Group from '../components/group';
import Toast from 'wepy-com-toast';
import testMixin from '../mixins/test';

console.log('moduleA ignored: ', moduleA); // => moduleA ignored: {}

@connect({
  num(state) {
    return state.counter.num;
  },
  asyncNum(state) {
    return state.counter.asyncNum;
  },
  sumNum(state) {
    return state.counter.num + state.counter.asyncNum;
  }
})
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: ' '
  };
  components = {
    panel: Panel,
    counter1: Counter,
    counter2: Counter,
    list: List,
    group: Group,
    toast: Toast
  };

  mixins = [testMixin];

  data = {};

  computed = {};

  methods = {};

  events = {};

  onLoad() {}
  methods = {
    /* test() {
      var pages = this.getCurrentPages();
      console.log(pages)
      var prevPage = pages[pages.length - 2];
      console.log(prevPage)
      prevPage.testTitle = 'newTestTitle';
      this.$apply();
      wepy.navigateBack({ delta: 1 });
    } */
  };
}
</script>
